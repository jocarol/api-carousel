{"ast":null,"code":"var _jsxFileName = \"/Users/joriscarol/DEV/api-carousel/src/App.js\";\nimport React, { Component } from \"react\";\nimport moment from \"moment\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport { ReactComponent as LikeSvg } from \"@svgr/webpack?-svgo,+titleProp,+ref!./image2vector.svg\";\nimport fetchPosts from \"./fetchPosts.js\";\nimport \"animate.css\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSetState = () => {\n      this.setState({\n        classAnim: \"\"\n      });\n    };\n\n    this.state = {\n      offset: 0,\n      posts: null,\n      limit: 3,\n      index: 0,\n      // post index.\n      lazyOffset: 5,\n      // post request threshold.\n      classAnim: \"\"\n    };\n  }\n\n  // The state loader is builded as a method that will handle :\n  // I   - The lazy loading of the API requests.\n  // II  - The cyclcling through API fetched posts.\n  // III - The resulting compoponent's state assignation.\n  async stateLoader() {\n    if ( // Checking the post queue to evaluate if we need to request more post\n    this.state.posts !== null && this.state.index >= this.state.posts.length - 1 - this.state.lazyOffset) {\n      this.setState({\n        offset: this.state.index,\n        index: this.state.index + 1\n      });\n    } else if (this.state.posts !== null) {\n      // Rendering the next post\n      this.setState({\n        index: this.state.index + 1\n      });\n      return;\n    }\n\n    this.removeAnim(); // If no previous conditions have been met, it means that state.post is null.\n    // Thus we need to load the posts in the component's state. At this point in any cases,\n    // states have been properly updated.\n\n    fetchPosts(this.state);\n  }\n\n  addAnim() {\n    this.setState({\n      classAnim: \"fadeIn\"\n    });\n  }\n\n  removeAnim() {\n    this.setState({\n      classAnim: \"\"\n    });\n  }\n\n  componentDidMount() {\n    this.stateLoader(); // Call upon component mounting.\n\n    setInterval(() => {\n      // Timer regulating the call to the stateLoader() method.\n      this.addAnim();\n      this.stateLoader();\n    }, 6000);\n  }\n\n  render() {\n    const _this$state = this.state,\n          posts = _this$state.posts,\n          index = _this$state.index;\n    if (!posts) // Rendering a spinner while there is no post to consume.\n      return React.createElement(\"div\", {\n        className: \"loaderContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(CircularProgress, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }));\n    const mediaUrl = posts[index].media.urls.regular; // Assignation of the var needed in the custom template\n\n    const avatar = posts[index].media.user.profile_images.medium || \"\"; // for string interpolation.\n\n    const likeCount = posts[index].media.statistics.likes || \"0\";\n    const personnePersonnes = likeCount < 2 ? \"personne\" : \"personnes\";\n    const lastName = posts[index].media.user.last_name || \"\";\n    const firstName = posts[index].media.user.first_name || \"\";\n    const title = posts[index].title || \"Sans Titre\";\n    const description = posts[index].description || \"Sans dÃ©scriptions\";\n    const timeElapsed = moment(posts[index].media.statistics.created).format(\"D\") || \"\";\n    const jourJours = timeElapsed < 2 ? \"jour\" : \"jours\";\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(Card, {\n      className: \"card animated \" + this.state.classAnim,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 0,\n      direction: \"row\",\n      style: {\n        height: \"100vh\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      lg: 7,\n      md: 7,\n      xl: 7,\n      xs: 7,\n      className: \"gridPicWrapper\",\n      style: {\n        overflow: \"hidden\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      style: {\n        width: \"100%\"\n      },\n      title: \"lorem ipsum\",\n      src: mediaUrl,\n      className: \"media\",\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), React.createElement(CardMedia, {\n      style: {\n        width: \"100%\",\n        height: \"100%\"\n      },\n      title: \"lorem ipsum\",\n      image: mediaUrl,\n      className: \"canvaPic\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      lg: 5,\n      md: 5,\n      xl: 5,\n      xs: 5,\n      className: \"grid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(CardHeader, {\n      action: React.createElement(\"div\", {\n        className: \"actionWrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        className: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, \"\".concat(lastName, \" \").concat(firstName)), React.createElement(Avatar, {\n        className: \"avatar\",\n        src: avatar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }), React.createElement(CardContent, {\n      className: \"vAlign\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h4\",\n      color: \"textSecondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, title)), React.createElement(Typography, {\n      variant: \"h6\",\n      color: \"textSecondary\",\n      component: \"p\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, description)), React.createElement(CardActions, {\n      disableSpacing: true,\n      className: \"like\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      \"aria-label\": \"Like the slide\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(LikeSvg, {\n      height: \"25px\",\n      width: \"25px\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    })), React.createElement(Typography, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, likeCount, \" \", personnePersonnes)), React.createElement(Typography, {\n      className: \"date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \"Il y a \", timeElapsed, \" \", jourJours)))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/joriscarol/DEV/api-carousel/src/App.js"],"names":["React","Component","moment","CircularProgress","Card","CardActions","CardContent","Grid","Typography","CardHeader","Avatar","IconButton","CardMedia","fetchPosts","App","constructor","props","handleSetState","setState","classAnim","state","offset","posts","limit","index","lazyOffset","stateLoader","length","removeAnim","addAnim","componentDidMount","setInterval","render","mediaUrl","media","urls","regular","avatar","user","profile_images","medium","likeCount","statistics","likes","personnePersonnes","lastName","last_name","firstName","first_name","title","description","timeElapsed","created","format","jourJours","height","overflow","width"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport moment from \"moment\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport { ReactComponent as LikeSvg } from \"./image2vector.svg\";\nimport fetchPosts from \"./fetchPosts.js\"\n\nimport \"animate.css\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      offset: 0,\n      posts: null,\n      limit: 3,\n      index: 0,         // post index.\n      lazyOffset: 5,    // post request threshold.\n      classAnim: \"\"\n    };\n  }\n\n  handleSetState = () => {\n    this.setState({ classAnim : \"\" })  \n  }\n  // The state loader is builded as a method that will handle :\n  // I   - The lazy loading of the API requests.\n  // II  - The cyclcling through API fetched posts.\n  // III - The resulting compoponent's state assignation.\n  async stateLoader() {\n    if (                              // Checking the post queue to evaluate if we need to request more post\n      this.state.posts !== null &&      \n      this.state.index >= (this.state.posts.length - 1) - this.state.lazyOffset\n    ) {\n      this.setState({\n        offset: this.state.index,\n        index: this.state.index + 1\n      });\n    }\n    else if (this.state.posts !== null) {   // Rendering the next post\n      this.setState({ index: this.state.index + 1 });\n      return;\n    }\n    this.removeAnim();\n    // If no previous conditions have been met, it means that state.post is null.\n    // Thus we need to load the posts in the component's state. At this point in any cases,\n    // states have been properly updated.\n    fetchPosts(this.state);\n  }\n\n  addAnim() {\n      this.setState({classAnim : \"fadeIn\"});\n  }\n\n  removeAnim() {\n      this.setState({classAnim : \"\"});    \n  }\n  \n  componentDidMount() {\n    this.stateLoader();   // Call upon component mounting.\n    setInterval(() => {\n         // Timer regulating the call to the stateLoader() method.\n      this.addAnim();\n      this.stateLoader();\n    }, 6000);\n  }\n  \n  render() {\n    const { posts, index } = this.state;\n\n    if (!posts)   // Rendering a spinner while there is no post to consume.\n      return (\n        <div className=\"loaderContainer\">\n          <CircularProgress />\n        </div>\n      );\n\n    const mediaUrl = posts[index].media.urls.regular;                     // Assignation of the var needed in the custom template\n    const avatar = posts[index].media.user.profile_images.medium || \"\";   // for string interpolation.\n    const likeCount = posts[index].media.statistics.likes || \"0\";\n    const personnePersonnes = likeCount < 2 ? \"personne\" : \"personnes\";\n    const lastName = posts[index].media.user.last_name || \"\";\n    const firstName = posts[index].media.user.first_name || \"\";\n    const title = posts[index].title || \"Sans Titre\";\n    const description = posts[index].description || \"Sans dÃ©scriptions\";\n    const timeElapsed = moment(posts[index].media.statistics.created).format(\"D\") || \"\";\n    const jourJours = timeElapsed < 2 ? \"jour\" : \"jours\";\n\n\n    return (\n      <div className=\"App\">\n        <Card className={\"card animated \" + this.state.classAnim}>\n          <Grid\n            container\n            spacing={0}\n            direction=\"row\"\n            style={{ height: \"100vh\" }}\n          >\n            <Grid\n              item\n              lg={7}\n              md={7}\n              xl={7}\n              xs={7}\n              className=\"gridPicWrapper\"\n              style={{ overflow: \"hidden\" }}\n            >\n              <img\n                style={{ width: \"100%\" }}\n                title=\"lorem ipsum\"\n                src={mediaUrl}\n                className=\"media\"\n                alt=\"\"\n              />\n              <CardMedia\n                style={{ width: \"100%\", height: \"100%\" }}\n                title=\"lorem ipsum\"\n                image={mediaUrl}\n                className=\"canvaPic\"\n              />\n            </Grid>\n            <Grid item lg={5} md={5} xl={5} xs={5} className=\"grid\">\n              <CardHeader\n                action={\n                  <div className=\"actionWrapper\">\n                    <Typography className=\"name\">\n                      {`${lastName} ${firstName}`}\n                    </Typography>\n                    <Avatar className=\"avatar\" src={avatar} />\n                  </div>\n                }\n              />\n              <CardContent className=\"vAlign\">\n                <Typography variant=\"h4\" color=\"textSecondary\">\n                  <b>{title}</b>\n                </Typography>\n                <Typography variant=\"h6\" color=\"textSecondary\" component=\"p\">\n                  {description}\n                </Typography>\n              </CardContent>\n              <CardActions disableSpacing className=\"like\">\n                <IconButton aria-label=\"Like the slide\">\n                  <LikeSvg height=\"25px\" width=\"25px\" />\n                </IconButton>\n                <Typography>\n                  {likeCount} {personnePersonnes}\n                </Typography>\n              </CardActions>\n              <Typography className=\"date\">\n                Il y a {timeElapsed} {jourJours}\n              </Typography>\n            </Grid>\n          </Grid>\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}