{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _reactTransitionGroup = require('react-transition-group');\n\nvar _React16CSSTransitionGroupChild = require('./React16CSSTransitionGroupChild');\n\nvar _React16CSSTransitionGroupChild2 = _interopRequireDefault(_React16CSSTransitionGroupChild);\n\nvar _createReactClass = require('create-react-class');\n\nvar _createReactClass2 = _interopRequireDefault(_createReactClass);\n\nvar _react = require('react');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar assign = require('object-assign');\n\nvar Inferno = {\n  createClass: _createReactClass2.default,\n  PropTypes: require('proptypes'),\n  createElement: _react.createElement\n};\n\nfunction createTransitionTimeoutPropValidator(transitionType) {\n  var timeoutPropName = 'transition' + transitionType + 'Timeout';\n  var enabledPropName = 'transition' + transitionType;\n  return function (props) {\n    // If the transition is enabled\n    if (props[enabledPropName]) {\n      // If no timeout duration is provided\n      if (props[timeoutPropName] == null) {\n        return new Error(timeoutPropName + \" wasn't supplied to React16CSSTransitionGroup: \" + \"this can cause unreliable animations and won't be supported in \" + 'a future version of React. See ' + 'https://fb.me/react-animation-transition-group-timeout for more ' + 'information.'); // If the duration isn't a number\n      } else if (typeof props[timeoutPropName] !== 'number') {\n        return new Error(timeoutPropName + ' must be a number (in milliseconds)');\n      }\n    }\n  };\n}\n\nvar React16CSSTransitionGroup = (0, _createReactClass2.default)({\n  displayName: 'React16CSSTransitionGroup',\n  propTypes: {\n    transitionName: _React16CSSTransitionGroupChild2.default.propTypes.name,\n    transitionChange: Inferno.PropTypes.bool,\n    transitionAppear: Inferno.PropTypes.bool,\n    transitionEnter: Inferno.PropTypes.bool,\n    transitionLeave: Inferno.PropTypes.bool,\n    transitionAppearTimeout: createTransitionTimeoutPropValidator('Appear'),\n    transitionChangeTimeout: createTransitionTimeoutPropValidator('Change'),\n    transitionEnterTimeout: createTransitionTimeoutPropValidator('Enter'),\n    transitionLeaveTimeout: createTransitionTimeoutPropValidator('Leave')\n  },\n  getDefaultProps: function getDefaultProps(props) {\n    return {\n      transitionAppear: false,\n      transitionEnter: true,\n      transitionChange: false,\n      transitionLeave: true\n    };\n  },\n  _wrapChild: function _wrapChild(child) {\n    var transitionChange = this.props.transitionName.changeActive ? true : false;\n    var transitionAppear = this.props.transitionName.appearActive ? true : false;\n    var transitionEnter = this.props.transitionName.enterActive ? true : false;\n    var transitionLeave = this.props.transitionName.leaveActive ? true : false;\n    return (0, _react.createElement)(_React16CSSTransitionGroupChild2.default, {\n      key: child.key,\n      name: this.props.transitionName,\n      appear: transitionAppear,\n      enter: transitionEnter,\n      change: transitionChange,\n      animate: this.props.animate,\n      animateChangeIf: this.props.animateChangeIf,\n      leave: transitionLeave,\n      changeTimeout: this.props.transitionChangeTimeout,\n      appearTimeout: this.props.transitionAppearTimeout,\n      enterTimeout: this.props.transitionEnterTimeout,\n      leaveTimeout: this.props.transitionLeaveTimeout\n    }, child);\n  },\n  render: function render() {\n    var children = Array.isArray(this.props.children) ? this.props.children : [this.props.children];\n\n    var props = _objectWithoutProperties(this.props, ['animate', 'animateChangeIf', 'transitionChangeTimeout', 'transitionChange']);\n\n    var el = (0, _react.createElement)(_reactTransitionGroup.TransitionGroup, assign({}, props, {\n      childFactory: this._wrapChild\n    }), children);\n    return el;\n  }\n});\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nexports.default = React16CSSTransitionGroup;","map":null,"metadata":{},"sourceType":"script"}