{"ast":null,"code":"var _jsxFileName = \"/Users/joriscarol/DEV/api-carousel/src/App.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport moment from 'moment';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport { ReactComponent as LikeSvg } from \"@svgr/webpack?-svgo,+titleProp,+ref!./image2vector.svg\";\nimport Animate from 'animate.css-react';\nimport './App.css';\nimport 'animate.css/animate.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      offset: 0,\n      posts: null,\n      limit: 5,\n      index: 0\n    };\n  }\n\n  async stateLoader() {\n    if (this.state.posts !== null && this.state.index < this.state.limit - 1) {\n      console.log(\"Posts loaded. No need to fetch more posts for now.\");\n      this.setState({\n        index: this.state.index + 1\n      });\n      console.log(\"State updated : state.index = \" + this.state.index + \". Returning.\");\n      return;\n    } else if (this.state.posts !== null && this.state.index === this.state.limit - 1) {\n      console.log(\"No post remaining. Updating state before requesting new posts\");\n      this.setState({\n        offset: this.state.index,\n        index: 0\n      });\n      console.log(\"State updated : state.offset = \" + this.state.offset + \". state.index = \" + this.state.index);\n    }\n\n    const _this$state = this.state,\n          limit = _this$state.limit,\n          offset = _this$state.offset;\n\n    try {\n      console.log(\"Requesting the posts.\");\n      await axios({\n        method: 'get',\n        url: \"https://api.slstice.com/mock/posts?offset=\".concat(offset, \"&limit=\").concat(limit, \"&api_key=ZkUvF7GBqc0l1Ou6DSPf\"),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(async ({\n        data: {\n          response\n        }\n      }) => {\n        const data = await Promise.all(response.posts.map(async post => {\n          const _ref = await axios({\n            method: 'get',\n            url: \"https://api.slstice.com/mock/medias/\".concat(post.mediaId, \"?api_key=ZkUvF7GBqc0l1Ou6DSPf\"),\n            headers: {\n              'Content-Type': 'application/json'\n            }\n          }),\n                media = _ref.data.response.media;\n\n          const _ref2 = await axios({\n            method: 'get',\n            url: \"https://api.slstice.com/mock/users/\".concat(media.owner.username, \"?api_key=ZkUvF7GBqc0l1Ou6DSPf\"),\n            headers: {\n              'Content-Type': 'application/json'\n            }\n          }),\n                user = _ref2.data.response.user;\n\n          media.user = user;\n          post.media = media;\n          return post;\n        }));\n        return this.setState({\n          posts: data\n        });\n      });\n    } catch (err) {\n      setTimeout(() => this.stateLoader(), 1000);\n    }\n  }\n\n  componentDidMount() {\n    setInterval(() => {\n      this.stateLoader();\n    }, 6000);\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          posts = _this$state2.posts,\n          index = _this$state2.index;\n    if (!posts) return React.createElement(\"div\", {\n      className: \"loaderContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(CircularProgress, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }));\n    const mediaUrl = posts[index].media.urls.regular;\n    const avatar = posts[index].media.user.profile_images.medium || \"\";\n    const likeCount = posts[index].media.statistics.likes || \"0\";\n    const personnePersonnes = likeCount < 2 ? \"personne\" : \"personnes\";\n    const lastName = posts[index].media.user.last_name || \"\";\n    const firstName = posts[index].media.user.first_name || \"\";\n    const title = posts[index].media.title || \"Sans Titre\";\n    const description = posts[index].description || \"Sans dÃ©scriptions\";\n    const timeElapsed = posts[index].media.statistics.created || \"\";\n    const jourJours = timeElapsed < 2 ? \"jour\" : \"jours\";\n    return React.createElement(Animate, {\n      appear: \"fadeInDown\",\n      durationAppear: 1000,\n      component: \"div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"react animate.css\"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/joriscarol/DEV/api-carousel/src/App.js"],"names":["React","Component","axios","moment","CircularProgress","Card","CardActions","CardContent","Grid","Typography","CardHeader","Avatar","IconButton","CardMedia","Animate","App","constructor","props","state","offset","posts","limit","index","stateLoader","console","log","setState","method","url","headers","then","data","response","Promise","all","map","post","mediaId","media","owner","username","user","err","setTimeout","componentDidMount","setInterval","render","mediaUrl","urls","regular","avatar","profile_images","medium","likeCount","statistics","likes","personnePersonnes","lastName","last_name","firstName","first_name","title","description","timeElapsed","created","jourJours"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport moment from 'moment';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport { ReactComponent as LikeSvg } from \"./image2vector.svg\";\nimport Animate from 'animate.css-react';\nimport './App.css';\nimport 'animate.css/animate.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      offset: 0,\n      posts: null,\n      limit: 5,\n      index: 0,\n    }\n  }\n\n  \nasync stateLoader() {\n    if (this.state.posts !== null && this.state.index < this.state.limit - 1) {\n      console.log(\"Posts loaded. No need to fetch more posts for now.\");\n      this.setState({index : this.state.index + 1});\n      console.log(\"State updated : state.index = \" + this.state.index + \". Returning.\");\n      return;\n    }\n    else if (this.state.posts !== null && this.state.index === this.state.limit - 1) {\n      console.log(\"No post remaining. Updating state before requesting new posts\");\n      this.setState({\n        offset : this.state.index,\n        index : 0\n      });\n      console.log(\"State updated : state.offset = \" + this.state.offset + \". state.index = \" + this.state.index)\n    }\n\n\n    const { limit, offset } = this.state;\n    try {\n      console.log(\"Requesting the posts.\")\n        await axios({\n          method: 'get',\n          url: `https://api.slstice.com/mock/posts?offset=${offset}&limit=${limit}&api_key=ZkUvF7GBqc0l1Ou6DSPf`,\n          headers: {\n            'Content-Type': 'application/json',\n          }\n        })\n        .then(async ({ data: { response } }) => {\n            const data = await Promise.all(response.posts.map(async (post) => {\n            const { data: { response: { media } } } = await axios({\n              method: 'get',\n              url: `https://api.slstice.com/mock/medias/${post.mediaId}?api_key=ZkUvF7GBqc0l1Ou6DSPf`,\n              headers: {\n                'Content-Type': 'application/json',\n              }\n            });\n            const { data: { response: { user } } } = await axios({\n              method: 'get',\n              url: `https://api.slstice.com/mock/users/${media.owner.username}?api_key=ZkUvF7GBqc0l1Ou6DSPf`,\n              headers: {\n                'Content-Type': 'application/json',\n              }\n            });\n            media.user = user;\n            post.media = media;\n            return post;\n          }));\n        return this.setState({ posts: data });\n      }) \n    } catch(err){\n      setTimeout(()=>this.stateLoader(), 1000);\n    }\n  }\n  \n  componentDidMount() {\n    setInterval(()=>{\n      this.stateLoader()}\n      ,6000);\n  }\n  \n\n  render () {\n    const { posts, index } = this.state    \n    \n    if (!posts) return <div className=\"loaderContainer\"><CircularProgress /></div>\n\n    const mediaUrl = posts[index].media.urls.regular;\n    const avatar = posts[index].media.user.profile_images.medium || \"\";\n    const likeCount = posts[index].media.statistics.likes || \"0\";\n    const personnePersonnes = (likeCount < 2) ? \"personne\" : \"personnes\";\n    const lastName = posts[index].media.user.last_name || \"\"\n    const firstName = posts[index].media.user.first_name || \"\";\n    const title = posts[index].media.title || \"Sans Titre\";\n    const description = posts[index].description || \"Sans dÃ©scriptions\";\n    const timeElapsed = posts[index].media.statistics.created || \"\";\n    const jourJours = (timeElapsed < 2) ? \"jour\" : \"jours\";\n\n    return (\n      <Animate\n        appear=\"fadeInDown\"\n        durationAppear={1000}\n        component=\"div\" >\n \n        <h1>react animate.css</h1>\n \n      </Animate>\n      \n    );\n  }\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}