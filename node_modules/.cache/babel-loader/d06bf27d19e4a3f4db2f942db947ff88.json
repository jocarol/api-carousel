{"ast":null,"code":"var _jsxFileName = \"/Users/joriscarol/DEV/api-carousel/src/App.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport moment from 'moment';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport { ReactComponent as LikeSvg } from \"@svgr/webpack?-svgo,+titleProp,+ref!./image2vector.svg\";\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      offset: 0,\n      posts: null,\n      limit: 3,\n      index: 0\n    };\n  }\n\n  componentDidMount() {\n    const _this$state = this.state,\n          limit = _this$state.limit,\n          offset = _this$state.offset;\n    axios({\n      method: 'get',\n      url: \"https://api.slstice.com/mock/posts?offset=\".concat(offset, \"&limit=\").concat(limit, \"&api_key=ZkUvF7GBqc0l1Ou6DSPf\"),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(({\n      data: {\n        response\n      }\n    }) => {\n      return Promise.all(response.posts.map(async post => {\n        const _ref = await axios({\n          method: 'get',\n          url: \"https://api.slstice.com/mock/medias/\".concat(post.mediaId, \"?api_key=ZkUvF7GBqc0l1Ou6DSPf\"),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        }),\n              media = _ref.data.response.media;\n\n        const _ref2 = await axios({\n          method: 'get',\n          url: \"https://api.slstice.com/mock/users/\".concat(media.owner.username, \"?api_key=ZkUvF7GBqc0l1Ou6DSPf\"),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        }),\n              user = _ref2.data.response.user;\n\n        media.user = user;\n        post.media = media;\n        return post;\n      }));\n    }).then(data => this.setState({\n      posts: data\n    }));\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          posts = _this$state2.posts,\n          index = _this$state2.index;\n    if (!posts) return React.createElement(\"div\", {\n      className: \"loaderContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(CircularProgress, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }));\n    const lastName = posts[index].media.user.last_name || \"\";\n    const firstName = posts[index].media.user.first_name || \"\";\n    const title = posts[index].media.title || \"Untitled\";\n    const description = posts[index].description || \"No description\";\n    const timeElapsed = posts[index].media.statistics.created || \"\";\n    const jourJours = timeElapsed < 2 ? \"jour\" : \"jours\";\n    console.log(posts);\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 0,\n      direction: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(CardMedia, {\n      style: {\n        height: 0,\n        paddingTop: '56.25%',\n        filter: 'blur(5px)'\n      },\n      image: posts[index].media.urls.raw,\n      title: \"lorem ipsum\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(Card, {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(CardHeader, {\n      action: React.createElement(\"div\", {\n        className: \"actionWrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        className: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"\".concat(lastName, \" \").concat(firstName)), React.createElement(Avatar, {\n        src: posts[index].media.user.profile_images.medium,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(CardContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h5\",\n      color: \"textSecondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, title), React.createElement(Typography, {\n      variant: \"h7\",\n      color: \"textSecondary\",\n      component: \"p\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, description)), React.createElement(CardActions, {\n      disableSpacing: true,\n      display: \"flex\",\n      flexdirection: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      \"aria-label\": \"Like the slide\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(LikeSvg, {\n      height: \"20px\",\n      width: \"20px\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    })), React.createElement(Typography, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, posts[index].media.statistics.likes, \" personnes\")), React.createElement(Typography, {\n      className: \"date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Il y a \", moment(timeElapsed).format('D'), \" \", jourJours)))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/joriscarol/DEV/api-carousel/src/App.js"],"names":["React","Component","axios","moment","CircularProgress","Card","CardActions","CardContent","Grid","Typography","CardHeader","Avatar","IconButton","CardMedia","App","constructor","props","state","offset","posts","limit","index","componentDidMount","method","url","headers","then","data","response","Promise","all","map","post","mediaId","media","owner","username","user","setState","render","lastName","last_name","firstName","first_name","title","description","timeElapsed","statistics","created","jourJours","console","log","height","paddingTop","filter","urls","raw","profile_images","medium","likes","format"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport moment from 'moment';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport { ReactComponent as LikeSvg } from \"./image2vector.svg\";\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      offset: 0,\n      posts: null,\n      limit: 3,\n      index: 0\n    }\n  }\n\n  componentDidMount() {\n    const { limit, offset } = this.state;\n\n    axios({\n      method: 'get',\n      url: `https://api.slstice.com/mock/posts?offset=${offset}&limit=${limit}&api_key=ZkUvF7GBqc0l1Ou6DSPf`,\n      headers: {\n        'Content-Type': 'application/json',\n      }\n    }).then(({ data: { response } }) => {\n      return Promise.all(response.posts.map(async post => {\n        const { data: { response: { media } } } = await axios({\n          method: 'get',\n          url: `https://api.slstice.com/mock/medias/${post.mediaId}?api_key=ZkUvF7GBqc0l1Ou6DSPf`,\n          headers: {\n            'Content-Type': 'application/json',\n          }\n        })\n        const { data: { response: { user }} }  = await axios({\n          method: 'get',\n          url: `https://api.slstice.com/mock/users/${media.owner.username}?api_key=ZkUvF7GBqc0l1Ou6DSPf`,\n          headers: {\n            'Content-Type': 'application/json',\n          }\n        })\n\n        media.user = user;\n        post.media = media;\n        return post;\n      }))\n    })\n    .then((data) => this.setState({ posts: data }))\n  }\n\n  render () {\n    const { posts, index } = this.state    \n    \n    if (!posts) return <div className=\"loaderContainer\"><CircularProgress /></div>\n\n    const lastName = posts[index].media.user.last_name || \"\";\n    const firstName = posts[index].media.user.first_name || \"\";\n    const title = posts[index].media.title || \"Untitled\";\n    const description = posts[index].description || \"No description\";\n    const timeElapsed = posts[index].media.statistics.created || \"\";\n    const jourJours = (timeElapsed < 2) ? \"jour\" : \"jours\";\n\n    console.log(posts);\n\n    return (\n      <div className=\"App\">\n        <Grid\n          container\n          spacing={0}\n          direction=\"row\"\n        >\n          <Grid item>\n            <CardMedia\n              style={{height: 0, paddingTop: '56.25%', filter: 'blur(5px)'}}\n              image={posts[index].media.urls.raw}\n              title=\"lorem ipsum\"\n            />\n          </Grid>\n          <Grid item>\n            <Card className=\"card\">\n              <CardHeader\n                action={\n                  <div className=\"actionWrapper\">\n                    <Typography className=\"name\">\n                      {`${lastName} ${firstName}`}\n                    </Typography>\n                    <Avatar src={posts[index].media.user.profile_images.medium} />\n                  </div>\n                }\n              />\n              <CardContent>\n                <Typography variant=\"h5\" color=\"textSecondary\">\n                   {title}\n                 </Typography>\n                 <Typography variant=\"h7\" color=\"textSecondary\" component=\"p\">\n                   {description}\n                 </Typography>\n              </CardContent>\n              <CardActions disableSpacing display=\"flex\" flexdirection=\"row\"> \n                <IconButton aria-label=\"Like the slide\">\n                  <LikeSvg height=\"20px\" width=\"20px\"/>\n                </IconButton>\n                <Typography>\n                  {posts[index].media.statistics.likes} personnes\n                </Typography>\n              </CardActions>\n              <Typography className=\"date\">\n                Il y a {moment(timeElapsed).format('D')} {jourJours}\n              </Typography>\n            </Card>\n          </Grid>\n        </Grid>\n      </div>\n    \n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}